pow(m,n) = pow(m, n-1) * m  ; n > 0
         = 1                ; n = 0

############# Optimization to reduce multiplications ################

int power(int m , int n) {
    if (n == 0) {
        return 1;
    } 
    if (n %2 == 0) {
        return power(m*m, n/2);
    } else {
        return m * power(m*m, (n-1)/2);
    }
    
}

#####################################################################


#include <stdio.h>

int pow(int m , int n) {
    if (n == 0) {
        return 1;
    } else {
        return m*pow(m, n-1);    
    }
}

int main() {
    // Write C code here
    int f = pow(2,3);
    printf("\npow (2,3) = %d", f);
    return 0;
}
